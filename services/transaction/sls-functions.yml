apigw-event-handler:
  handler: src/transactionLambda.handle
  events:
    - http:
        path: account/{accountId}/wallet/{walletId}/transaction
        method: GET
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId: ${self:custom.restApiAuthorizerId}
          scopes:
            - email
        parameters:
          paths:
            accountId: true
            walletId: true
          querystrings:
            from: true
            to: true
            order: false
    - http:
        path: account/{accountId}/wallet/{walletId}/transaction
        method: PUT
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId: ${self:custom.restApiAuthorizerId}
          scopes:
            - email
        parameters:
          paths:
            accountId: true
            walletId: true
          querystrings:
            from: false
            to: false
    - http:
        path: account/{accountId}/wallet/{walletId}/transaction
        method: DELETE
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId: ${self:custom.restApiAuthorizerId}
          scopes:
            - email
        parameters:
          paths:
            accountId: true
            walletId: true
    - http:
        path: account/{accountId}/wallet/{walletId}/transaction/{transactionId}
        method: GET
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId: ${self:custom.restApiAuthorizerId}
          scopes:
            - email
        parameters:
          paths:
            accountId: true
            walletId: true
            transactionId: true
    - http:
        path: account/{accountId}/wallet/{walletId}/transaction/{transactionId}
        method: PUT
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId: ${self:custom.restApiAuthorizerId}
          scopes:
            - email
        parameters:
          paths:
            accountId: true
            walletId: true
            transactionId: true
    - http:
        path: account/{accountId}/wallet/{walletId}/transaction/{transactionId}
        method: DELETE
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId: ${self:custom.restApiAuthorizerId}
          scopes:
            - email
        parameters:
          paths:
            accountId: true
            walletId: true
            transactionId: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/virtwallet"
    - Effect: Allow
      Action: 
        - events:PutEvents
      Resource: "*"    