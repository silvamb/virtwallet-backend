eventBridge-handler:
  handler: src/metricsUpdateLambda.handle
  events:
    - eventBridge:
        pattern:
          source:
            - virtwallet
          detail-type:
            - transactions created
            - transaction updated
            - transactions updated
  iamRoleStatementsName: virtwallet-metrics-${self:provider.stage}-iam-role
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/virtwallet"

apigw-handler:
  handler: src/retrieveMetricsLambda.handle
  events:
    - http:
        path: account/{accountId}/metrics
        method: GET
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId: ${self:custom.restApiAuthorizerId}
        parameters:
          paths:
            accountId: true
          querystrings:
            walletId: false
            date: false
            categoryId: false
        cors: ${self:custom.cors}
  environment:
    CORS_ALLOWED_ORIGIN: ${self:custom.cors.origin, None}
  iamRoleStatementsName: virtwallet-retrieve-metrics-${self:provider.stage}-iam-role
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/virtwallet"