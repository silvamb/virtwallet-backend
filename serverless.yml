service: virtwallet

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:stage, 'eu-west-1'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/virtwallet"
    - Effect: Allow
      Action: 
        - sqs:SendMessage
        - sqs:ReceiveMessage
      Resource: "*"
    - Effect: Allow
      Action: 
        - s3:PutObject
        - s3:GetObject
      Resource: "arn:aws:s3:::virtwallet-user-files/account-files*"
  stackTags:
    Project: virtwallet

custom:
  cognitoIdpArn: ${file(./config.${self:provider.stage}.yml):cognitoIdpArn}

package:
  excludeDevDependencies: true
  individually: true

functions:
  ulsterCsvFileParser:
    handler: src/lambdas/ulster-statement-csv-parser/ulsterStatementCsvParserLambda.handle
    environment:
      transaction_queue_url:
        Ref: TransactionsSQSQueue
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - UlsterCsvParserSQSQueue
              - Arn
    package:
      include:
        - src/lambdas/ulster-statement-csv-parser/**
        - libs/*
        - node_modules/**
      exclude:
        - test/**
        - .git/**
        - .travis.yml
  transactionSqsConsumer:
    handler: src/lambdas/transaction/transactionSqsConsumerLambda.handle
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - TransactionsSQSQueue
              - Arn
    package:
      include:
        - src/lambdas/transaction/transactionSqsConsumerLambda.js
        - src/lambdas/transaction/transactionHandler.js
        - libs/*
        - node_modules/**
      exclude:
        - test/**
        - .git/**
        - .travis.yml
resources:
  Resources:
    UlsterCsvParserSQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: UlsterCsvParserQueue
    TransactionsSQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: TransactionsQueue
plugins:
  - serverless-mocha-plugin
